// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolManagementSystem.Infrastructure.Data;

#nullable disable

namespace SchoolManagementSystem.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SchoolManagementSystem.Domain.Entities.DayOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DayOrderTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DocType")
                        .HasColumnType("int");

                    b.Property<string>("DocumentPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasTable")
                        .HasColumnType("bit");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ValidateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("dayOrders");
                });

            modelBuilder.Entity("SchoolManagementSystem.Domain.Entities.DayOrderModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DayOrderTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DocType")
                        .HasColumnType("int");

                    b.Property<string>("DocumentPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasTable")
                        .HasColumnType("bit");

                    b.Property<Guid>("IdMetting")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ValidateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdMetting");

                    b.ToTable("DayOrderModel");
                });

            modelBuilder.Entity("SchoolManagementSystem.Domain.Entities.Jury", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("JuryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SectorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ValidateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Juries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f9774f35-0eac-430a-9d69-6277dc9f53c8"),
                            CreatedAt = new DateTime(2024, 8, 15, 14, 33, 58, 766, DateTimeKind.Utc).AddTicks(6967),
                            JuryName = "AGC Jury",
                            SectorId = new Guid("216a893d-740b-47bd-a689-065170b33437"),
                            Status = 1,
                            UpdatedAt = new DateTime(2024, 8, 15, 14, 33, 58, 766, DateTimeKind.Utc).AddTicks(6969),
                            ValidateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("e40e5ef1-65cc-4c1b-9908-41972efea9c6"),
                            CreatedAt = new DateTime(2024, 8, 15, 14, 33, 58, 766, DateTimeKind.Utc).AddTicks(6976),
                            JuryName = "TIC Jury",
                            SectorId = new Guid("0caff05b-d501-426f-948d-a841be4a1a3c"),
                            Status = 1,
                            UpdatedAt = new DateTime(2024, 8, 15, 14, 33, 58, 766, DateTimeKind.Utc).AddTicks(6977),
                            ValidateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("SchoolManagementSystem.Domain.Entities.JuryMember", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("JuryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LatestDiploma")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfileImg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ValidateAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("YearOfExperience")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("JuryId");

                    b.HasIndex("RoleId");

                    b.ToTable("JuryMembers");
                });

            modelBuilder.Entity("SchoolManagementSystem.Domain.Entities.JuryMemberRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ValidateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("JuryMemberRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("01e40292-e7b1-4809-8a69-e048429dc11b"),
                            CreatedAt = new DateTime(2024, 8, 15, 14, 33, 58, 765, DateTimeKind.Utc).AddTicks(2341),
                            Role = "Président",
                            Status = 1,
                            UpdatedAt = new DateTime(2024, 8, 15, 14, 33, 58, 765, DateTimeKind.Utc).AddTicks(2345),
                            ValidateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b3a39437-5f0c-464e-b3d7-93640ce1a910"),
                            CreatedAt = new DateTime(2024, 8, 15, 14, 33, 58, 765, DateTimeKind.Utc).AddTicks(2350),
                            Role = "Membre Professionnel",
                            Status = 1,
                            UpdatedAt = new DateTime(2024, 8, 15, 14, 33, 58, 765, DateTimeKind.Utc).AddTicks(2351),
                            ValidateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("83f5c7f2-e830-4b52-8dc2-ffab66638b68"),
                            CreatedAt = new DateTime(2024, 8, 15, 14, 33, 58, 765, DateTimeKind.Utc).AddTicks(2354),
                            Role = "Membre de l’établissement",
                            Status = 1,
                            UpdatedAt = new DateTime(2024, 8, 15, 14, 33, 58, 765, DateTimeKind.Utc).AddTicks(2355),
                            ValidateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("7ea628a7-2333-4310-b9e0-7cb0484adb71"),
                            CreatedAt = new DateTime(2024, 8, 15, 14, 33, 58, 765, DateTimeKind.Utc).AddTicks(2358),
                            Role = "Membre représentant l’Administration",
                            Status = 1,
                            UpdatedAt = new DateTime(2024, 8, 15, 14, 33, 58, 765, DateTimeKind.Utc).AddTicks(2359),
                            ValidateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("SchoolManagementSystem.Domain.Entities.Meeting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("JuryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ValidateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("JuryId");

                    b.ToTable("Meeting");
                });

            modelBuilder.Entity("SchoolManagementSystem.Domain.Entities.DayOrderModel", b =>
                {
                    b.HasOne("SchoolManagementSystem.Domain.Entities.Meeting", "Meeting")
                        .WithMany("DayOrderModels")
                        .HasForeignKey("IdMetting")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meeting");
                });

            modelBuilder.Entity("SchoolManagementSystem.Domain.Entities.JuryMember", b =>
                {
                    b.HasOne("SchoolManagementSystem.Domain.Entities.Jury", "Jury")
                        .WithMany("JuryMembers")
                        .HasForeignKey("JuryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolManagementSystem.Domain.Entities.JuryMemberRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jury");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SchoolManagementSystem.Domain.Entities.Meeting", b =>
                {
                    b.HasOne("SchoolManagementSystem.Domain.Entities.Jury", "Jury")
                        .WithMany()
                        .HasForeignKey("JuryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jury");
                });

            modelBuilder.Entity("SchoolManagementSystem.Domain.Entities.Jury", b =>
                {
                    b.Navigation("JuryMembers");
                });

            modelBuilder.Entity("SchoolManagementSystem.Domain.Entities.Meeting", b =>
                {
                    b.Navigation("DayOrderModels");
                });
#pragma warning restore 612, 618
        }
    }
}
