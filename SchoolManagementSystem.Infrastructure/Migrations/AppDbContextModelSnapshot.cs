// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolManagementSystem.Infrastructure.Data;

#nullable disable

namespace SchoolManagementSystem.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SchoolManagementSystem.Domain.Entities.DayOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DayOrderTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("dayOrders");
                });

            modelBuilder.Entity("SchoolManagementSystem.Domain.Entities.DayOrderModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DayOrderTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdMetting")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdMetting");

                    b.ToTable("DayOrderModel");
                });

            modelBuilder.Entity("SchoolManagementSystem.Domain.Entities.Jury", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("JuryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SectorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Juries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("42b598ec-cfa5-4455-b990-3902acc43852"),
                            CreatedAt = new DateTime(2024, 7, 22, 22, 3, 57, 695, DateTimeKind.Utc).AddTicks(8033),
                            JuryName = "AGC Jury",
                            SectorId = new Guid("216a893d-740b-47bd-a689-065170b33437"),
                            UpdatedAt = new DateTime(2024, 7, 22, 22, 3, 57, 695, DateTimeKind.Utc).AddTicks(8037)
                        },
                        new
                        {
                            Id = new Guid("5a19e0e1-ac97-4f4c-a3fd-41167438f5a1"),
                            CreatedAt = new DateTime(2024, 7, 22, 22, 3, 57, 695, DateTimeKind.Utc).AddTicks(8057),
                            JuryName = "TIC Jury",
                            SectorId = new Guid("0caff05b-d501-426f-948d-a841be4a1a3c"),
                            UpdatedAt = new DateTime(2024, 7, 22, 22, 3, 57, 695, DateTimeKind.Utc).AddTicks(8057)
                        });
                });

            modelBuilder.Entity("SchoolManagementSystem.Domain.Entities.JuryMember", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("JuryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LatestDiploma")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfileImg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("YearOfExperience")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("JuryId");

                    b.HasIndex("RoleId");

                    b.ToTable("JuryMembers");
                });

            modelBuilder.Entity("SchoolManagementSystem.Domain.Entities.JuryMemberRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("JuryMemberRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("53cdfc4d-c617-403b-9457-4bd704535c0e"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "Président",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("2bc43749-192c-4a65-a8bb-164e17100527"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "Membre Professionnel",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("7a49db16-39c3-40bb-bcfd-2e683f294f59"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "Membre de l’établissement",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b6080122-f6cf-4cd8-a576-c298fa246cb4"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "Membre représentant l’Administration",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("SchoolManagementSystem.Domain.Entities.Meeting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("JuryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("JuryId");

                    b.ToTable("Meeting");
                });

            modelBuilder.Entity("SchoolManagementSystem.Domain.Entities.DayOrderModel", b =>
                {
                    b.HasOne("SchoolManagementSystem.Domain.Entities.Meeting", "Meeting")
                        .WithMany("DayOrderModels")
                        .HasForeignKey("IdMetting")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meeting");
                });

            modelBuilder.Entity("SchoolManagementSystem.Domain.Entities.JuryMember", b =>
                {
                    b.HasOne("SchoolManagementSystem.Domain.Entities.Jury", "Jury")
                        .WithMany("JuryMembers")
                        .HasForeignKey("JuryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolManagementSystem.Domain.Entities.JuryMemberRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jury");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SchoolManagementSystem.Domain.Entities.Meeting", b =>
                {
                    b.HasOne("SchoolManagementSystem.Domain.Entities.Jury", "Jury")
                        .WithMany()
                        .HasForeignKey("JuryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jury");
                });

            modelBuilder.Entity("SchoolManagementSystem.Domain.Entities.Jury", b =>
                {
                    b.Navigation("JuryMembers");
                });

            modelBuilder.Entity("SchoolManagementSystem.Domain.Entities.Meeting", b =>
                {
                    b.Navigation("DayOrderModels");
                });
#pragma warning restore 612, 618
        }
    }
}
